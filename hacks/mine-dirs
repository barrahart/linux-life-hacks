#!/bin/bash


#########################################################################
# Name:         mine-dirs                                               #
#                                                                       #
# Author:       Barra Hart                                              #
#                                                                       #
# Repo:         https://github.com/barrahart/linux-life-hacks           #
#                                                                       #
# Description:  A handy but potentially VERY DANGEROUS tool, which 			#
#								recurrsively moves every file it finds in the current		#
#								directory (including files in subfolders) to the 				#
#								directory. Inspired by frustration. Use with care! 			#
#								I repeat, use with care!!!  				                    #
#########################################################################


# fancy
clear

# fancy
echo "---------------------------------------------------------------------"
echo "::::::::::::::::::::::::: Mine Dirs 1.0.0 :::::::::::::::::::::::::::"
echo "---------------------------------------------------------------------"
echo "Copyright 2023 Barra Hart"
echo "https://github.com/barrahart/linux-life-hacks"
echo "---------------------------------------------------------------------"
echo "Current Folder:"
echo "$(echo ${PWD})"
echo "---------------------------------------------------------------------"

echo ""

# so user knows not to be an idiot
echo "WARNING!!!"

echo ""

echo "This hack is potentially VERY DANGEROUS!!! It will recurrsively"
echo "move all the files it finds in this folder (including files in"
echo "subfolders) to this folder! If you do not want this to happen, or"
echo "if this folder is anywhere near your /root or /home folder, PRESS"
echo "CTRL-C RIGHT NOW and move your stuff to a safer folder"
echo "(e.g. ~/Desktop/my_safer_folder)! Then open that folder in your"
echo "Terminal and run this tool again."

echo ""

echo "You are responsible for any errors that may result from invalid"
echo "inputs, so please be careful. You are also responsible for any"
echo "errors that may result from corrupted or missing files, duplicate"
echo "files or system bugs. However, any error messages about file"
echo "deletion or movement can be safely ignored."

echo ""

echo "---------------------------------------------------------------------"

echo ""

# fancy
read -p "Press ENTER to continue, or CTRL-C to exit. "

echo ""

# in case user decides to be an idiot anyway
subdircount=`find . -maxdepth 1 -type d | wc -l`

# check if there are any subfolders in current directory
if [ $subdircount -gt 1 ]
then
	echo "---------------------------------------------------------------------"

	echo ""

	echo "WARNING!!!"

	echo ""

	echo "Subfolder(s) detected in"
	echo "'$(echo ${PWD##*/})'"

	echo ""

	read -p "Continue anyway? (y/n): " continue
	echo ""

  # continue or not?
	if [ $continue = "y" ]
	then
		: # carry on with script
	elif [ $continue = "n" ]
	then
		echo "---------------------------------------------------------------------"
		echo "Smart."
		echo "---------------------------------------------------------------------"
		exit 0
	else
		echo "---------------------------------------------------------------------"
	  echo "Try 'y' or 'n' next time :)"
	  echo "---------------------------------------------------------------------"
	  exit 0
	fi
fi


# check if user wants to get rid of empty folders after
echo "---------------------------------------------------------------------"
read -p "Delete empty folders after mining? (y/n): " delete_dirs
echo "---------------------------------------------------------------------"

if [ $delete_dirs = "y" ]
then
	delete_dirs_flag="true"
elif [ $delete_dirs = "n" ]
then
	delete_dirs_flag="false"
else
	echo "---------------------------------------------------------------------"
	echo "Try 'y' or 'n' next time :) Ignoring option."
	echo "---------------------------------------------------------------------"
fi

# check if user wants to get rid of other files
echo "---------------------------------------------------------------------"
echo "Are there any files in this folder you'd like to delete after"
read -p "mining? (y/n): " delete_others
echo "---------------------------------------------------------------------"

if [ $delete_others = "y" ]
then
	echo "---------------------------------------------------------------------"
	echo "Enter the extension(s) of the file(s) you want to delete below."
	echo "Separate multiple extensions with a comma (e.g. sh, txt, doc):"
	echo ""
	read victims_list
	echo "---------------------------------------------------------------------"

	delete_others_flag="true"

	victims_array=($(echo "$victims_list" | tr ', ' '\n'))

elif [ $delete_others = "n" ]
then
	delete_others_flag="false"
else
	echo "---------------------------------------------------------------------"
	echo "Try 'y' or 'n' next time :) Ignoring option."
	echo "---------------------------------------------------------------------"
fi


# recurrsively move all files in current folder to current folder;
# just comment it out if you don't want this in your copy
find . -type f -exec mv {} . \;


# delete empty folder(s) or not?
if [[ "$delete_dirs_flag" == "true" ]]
then
	find . -type d -exec rm -rf {} \;
fi


# delete other file(s) or not?
if [[ "$delete_others_flag" == "true" ]]
then
	for i in ${victims_array[@]}; do
		find . -name "*.$i" -exec rm {} \;
	done
fi


# fancy
echo "---------------------------------------------------------------------"
echo "Done."
echo "---------------------------------------------------------------------"
